@page "/employee"
@page "/employee/{id:int}"
@inject IEmployeeService EmployeeService
@inject NavigationManager NavigationManager

@if(ID == null)
{
    <PageTitle>Create Employee</PageTitle>
    <h1>Create Employee</h1>
}
else
{
    <PageTitle>Edit @employee.Name @employee.Surname Employee</PageTitle>

    <h1>Edit @employee.Name @employee.Surname Employee </h1>
    
    <ul>
        <li>Salary: @employee.Salary</li>
        <li>Dept: @employee.Department.Name</li>
    </ul>
}

<EditForm Model="employee" OnSubmit="handleSubmit">
    
    <div>
        <label for="name">First Name</label>
        <InputText id="name" @bind-Value="employee.Name" class="form-control"></InputText>
    </div>

    <div>
        <label for="surname">Surname</label>
        <InputText id="surname" @bind-Value="employee.Surname" class="form-control"></InputText>
    </div>

    <div>
        <label for="salary">Salary</label>
        <InputNumber id="salary" @bind-Value="employee.Salary" class="form-control"></InputNumber>
    </div>

    <div>
        <label>Department</label><br />
        <InputSelect @bind-Value="employee.DepartmentID" class="form-select">
        @foreach(var dept in EmployeeService.Departments)
        {
            <option value = "@dept.ID">@dept.Name</option>
        }
        </InputSelect>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">@buttonText</button>

</EditForm>
<br />
<button class="btn btn-primary" @onclick="(()=>viewAll())">View All</button>

@code{
    [Parameter]
    public int? ID { get; set; }

    string buttonText = string.Empty;

    protected BlazorCRUD.Shared.Employee employee = new BlazorCRUD.Shared.Employee
    { Department = new BlazorCRUD.Shared.Department() };

    protected override async Task OnInitializedAsync()
    {
        buttonText = ID == null ? "Save New Employee" : "Update Employee";
        await EmployeeService.GetDepartments();
    }

    protected override async Task OnParametersSetAsync()
    {
        await EmployeeService.GetDepartments();

        if (ID == null)
        { //create new employee // call stack on emp service
            await EmployeeService.GetDepartments();
        }
        else
        {
            employee = await EmployeeService.GetEmployee((int)ID); //CORRECT
        }
    }

    private async Task handleSubmit()
    {
        if (ID == null)
        {
            employee.ID = 0;
            await EmployeeService.CreateEmployee(employee);            
        }
        else
        {
            await EmployeeService.UpdateEmployee((int)ID, employee);
        }
    }

    private void viewAll()
    {
        NavigationManager.NavigateTo("/employees");
    }
}